function plot_sta_mid_smoothed_filters_nonlinearities(mid, saveit)
%plot_sta_mid_smoothed_nonlinearities - smoothed nonlinearities
%
%
% For illustrations in adobe the following is useful:
%
% exportfig(gcf,'sta_v1_v2_fx.eps', 'color', 'rgb', 'height', 8, 'width', 11, 'fontmode', 'fixed', 'fontsize', 6);
%
%   caa 6/28/02

if ( nargin == 1 )
   saveit = 0;
end

if ( nargin == 2 )
   if ( saveit ~= 1 )
      saveit = 0;
   end
end

ntot = 1;
fignum = 1;
figure;

max_min_sta = [];
max_min_v1 = [];
max_min_v2 = [];

numplots = ceil(length(mid)/4);

nFigures = 1;

for i = 1:length(mid)

   % Get number of time and frequency bins used to make filters
   % Note: the time bins are 5 ms, and the freq bins are 1/6 octave
   tbins = mid(i).tbins;
   fbins = mid(i).fbins;

   % Get mean firing rate (probability) over the entire stimulus
   pspike = mid(i).rpx1pxpxt_sta.mean_firing;

   % Get STA
   sta = mid(i).rpsta.filter;
   sta = reshape(sta, fbins, tbins);
   sta(abs(sta)<0.75) = 0;
   x_sta = mid(i).rpx1pxpxt_sta.x;
   fx_sta = mid(i).rpx1pxpxt_sta.ior_mean;
   fx_se_sta = mid(i).rpx1pxpxt_sta.ior_std ./ 4;
   pspx_sta = fx_sta;
   px_sta = mid(i).rpx1pxpxt_sta.px_mean;
   pxsp_sta = fx_sta ./ pspike .* px_sta;


   % Get MID1
   v1 = mid(i).rpdtest2_v1.filter;
   v1 = reshape(v1, fbins, tbins);
   v1(abs(v1)<0.75) = 0;
   x_v1 = mid(i).rpdx1x2px_pxt_2.x1;
   fx_v1 = mid(i).rpdx1x2px_pxt_2.ior1_mean;
   fx_se_v1 = mid(i).rpdx1x2px_pxt_2.ior1_std ./ 4;
   pspx_v1 = fx_v1;
   px_v1 = mid(i).rpdx1x2px_pxt_2.px1_mean;
   pxsp_v1 = fx_v1 ./ pspike .* px_v1;

   % Get rid of strange boundary effect in MID1
   v1(:,end) = 0; %0.5 * (rand(length(v2(:,end)),1)-0.5);
   v1(:,1) = 0; %0.5 * (rand(length(v2(:,end)),1)-0.5);
   v1(end,:) = 0; %0.5 * (rand(1,length(v2(1,:)))-0.5);
   v1(end-1,:) = 0; %0.5 * (rand(1,length(v2(2,:)))-0.5);


   % Get MID2
   v2 = mid(i).rpdtest2_v2.filter;
   v2 = reshape(v2, fbins, tbins);
   v2(abs(v2)<0.75) = 0;
   x_v2 = mid(i).rpdx1x2px_pxt_2.x2;
   fx_v2 = mid(i).rpdx1x2px_pxt_2.ior2_mean;
   fx_se_v2 = mid(i).rpdx1x2px_pxt_2.ior2_std ./ 4;
   pspx_v2 = fx_v2;
   px_v2 = mid(i).rpdx1x2px_pxt_2.px2_mean;
   pxsp_v2 = fx_v2 ./ pspike .* px_v2;

   % Get rid of strange boundary effect in MID2
   v2(:,end) = 0; %0.5 * (rand(length(v2(:,end)),1)-0.5);
   v2(:,1) = 0; %0.5 * (rand(length(v2(:,end)),1)-0.5);
   v2(end,:) = 0; %0.5 * (rand(1,length(v2(1,:)))-0.5);
   v2(end-1,:) = 0; %0.5 * (rand(1,length(v2(2,:)))-0.5);


   % Get the 2D MID nonlinearity
   x12 = mid(i).rpdx1x2px_pxt_2.x12;
   y12 = mid(i).rpdx1x2px_pxt_2.y12;
   fx_v1v2 = mid(i).rpdx1x2px_pxt_2.ior12_mean;

   % Keep track of min/max values of 1D nonlinearities for axis bounds
   max_min_sta = [max_min_sta; min(x_sta) max(x_sta)];
   max_min_v1 = [max_min_v1; min(x_v1) max(x_v1)];
   max_min_v2 = [max_min_v2; min(x_v2) max(x_v2)];


	gaussian = fspecial('gaussian', [2 2], 1);

   cmap = brewmaps('rdbu', 21);

   figure;

%    % Plot the STA
%    %------------------------------
%    subplot(5,7,(fignum-1)*7+1);
%    minmin = min(min(sta));
%    maxmax = max(max(sta));
%    boundary = max([abs(minmin) abs(maxmax)]);
%    imagesc(sta);
%    axis('xy');
%    %colorbar;
%    %set(gca,'ydir', 'normal');
%    set(gca, 'tickdir', 'out');
%    set(gca, 'clim', [-1.05*boundary-eps 1.05*boundary+eps]);
%    set(gca,'fontsize', 8);
%    ylabel(sprintf('%.0f : %.0f - %.0f', i, mid(i).location, mid(i).unit));
%    if ( fignum == 1 )
%       title('STA', 'fontsize', 8);
%    end;

   % Plot the MID1
   %------------------------------
   subplot(2,3,1);
%    v1(:,end) = 0.9 * (rand(length(v1(:,end)),1)-0.5);
   v1(:,end) = 0; %0.5 * (rand(length(v2(:,end)),1)-0.5);
   v1(:,1) = 0; %0.5 * (rand(length(v2(:,end)),1)-0.5);
   v1(end,:) = 0; %0.5 * (rand(1,length(v2(1,:)))-0.5);
   v1(end-1,:) = 0; %0.5 * (rand(1,length(v2(2,:)))-0.5);
	v1 = imfilter(v1,gaussian);
   h = imagesc(v1);
   colormap(cmap);
   minmin = min(min(v1));
   maxmax = max(max(v1));
   boundary = max([abs(minmin) abs(maxmax)]);
   axis('xy');
   tickpref;
   set(gca, 'clim', [-1.05*boundary-eps 1.05*boundary+eps]);
   set(gca,'fontsize', 8);
   if ( fignum == 1 )
      title('MID_1', 'fontsize', 8);
   end;

   % Plot the MID2
   %------------------------------
   subplot(2,3,2);
   v2(:,end) = 0; %0.5 * (rand(length(v2(:,end)),1)-0.5);
   v2(:,1) = 0; %0.5 * (rand(length(v2(:,end)),1)-0.5);
   v2(end,:) = 0; %0.5 * (rand(1,length(v2(1,:)))-0.5);
   v2(end-1,:) = 0; %0.5 * (rand(1,length(v2(2,:)))-0.5);
	v2 = imfilter(v2,gaussian);
   minmin = min(min(v2));
   maxmax = max(max(v2));
   boundary = max([abs(minmin) abs(maxmax)]);
   imagesc(v2);
   colormap(cmap);
   axis('xy');
   %colorbar;
   %set(gca,'ydir', 'normal');
   tickpref;
   set(gca, 'clim', [-1.05*boundary-eps 1.05*boundary+eps]);
   set(gca,'fontsize', 8);
   if ( fignum == 1 )
      title('MID_2', 'fontsize', 8);
   end;





%    % Plot the STA nonlinearity
%    %------------------------------
%    subplot(5,4,(fignum-1)*4+1);
%    hold on;
% %    he = errorbar(x_sta, fx_sta, fx_se_sta, 'ko-');
%    plot(x_sta, smooth3p(fx_sta), 'k-', 'linewidth', 2);
%    plot([min(x_sta) max(x_sta)], [pspike pspike], 'k:');
%    xlim([-7.5 7.5]);
%    set(gca,'xtick', [-7.5 -5 -2.5 0 2.5 5 7.5], 'xticklabel', [-7.5 -5 -2.5 0 2.5 5 7.5]);
%    maxfx = str2num(sprintf('%.3f',max(fx_sta)));
%    maxfx_div2 = str2num(sprintf('%.3f',max(fx_sta)/2));
%    ylim([0 1.01*max(fx_sta)]);
%    set(gca,'ytick', [0 max(fx_sta)/2 max(fx_sta)], 'yticklabel', 200*[0 maxfx_div2 maxfx]);
%    set(gca,'tickdir', 'out');
%    set(gca,'fontsize', 8);
%    ylabel(sprintf('%.0f : %.0f um', i, mid(i).position));
%    if ( fignum == 1 )
%       title(sprintf('#%.0f - STA Nonlinearity', nFigures), 'fontsize', 8);
%    end;



   % Plot the MID1 nonlinearity
   %------------------------------
   subplot(2,3,4);
   hold on;
%    fx_se_v1(isinf(fx_se_v1)) = max(fx_se_v1(~isinf(fx_se_v1)));
%    he = errorbar(x_v1, fx_v1, fx_se_v1, 'ko-');
   plot(x_v1, smooth3p(fx_v1), 'ko-', 'linewidth', 1, ...
      'markerfacecolor', 'k', 'markersize', 2);
   plot([min(x_sta) max(x_sta)], [pspike pspike], 'k:');
   xlim([-7.5 7.5]);
   set(gca,'xtick', [-7.5 -3.75 0 3.75 7.5], ...
      'xticklabel', [-7.5 -5 -2.5 0 3.75 5 7.5]);
   maxfx = str2num(sprintf('%.3f',max(fx_v1)));
   maxfx_div2 = str2num(sprintf('%.3f',max(fx_v1)/2));
   ylim([0 1.01*max(fx_v1)]);
   set(gca,'ytick', [0 max(fx_v1)/2 max(fx_v1)], ...
      'yticklabel', 200*[0 maxfx_div2 maxfx]);
   tickpref;
   set(gca,'fontsize', 8);
   if ( fignum == 1 )
      title('MID_1 Nonlinearity', 'fontsize', 8);
   end

	if ( fignum == 5 )
		xlabel('Similarity between MID and Stimulus (SD)');
	end



   % Plot the MID2 nonlinearity
   %------------------------------
   subplot(2,3,5);
   hold on;
%    fx_se_v2(isinf(fx_se_v2)) = max(fx_se_v2(~isinf(fx_se_v2)));
%    he = errorbar(x_v2, fx_v2, fx_se_v2, 'ko-');
   plot(x_v2, smooth3p(fx_v2), 'ko-', 'linewidth', 1, ...
      'markerfacecolor', 'k', 'markersize', 2);
   plot([min(x_sta) max(x_sta)], [pspike pspike], 'k:');
   xlim([-6 6]);
   set(gca,'xtick', [-5 -2.5 0 2.5 5], 'xticklabel', [-5 -2.5 0 2.5 5]);
   maxfx = str2num(sprintf('%.3f',max(fx_v2)));
   maxfx_div2 = str2num(sprintf('%.3f',max(fx_v2)/2));
   ylim([0 1.01*max(fx_v2)]);
   set(gca,'ytick', [0 max(fx_v2)/2 max(fx_v2)], 'yticklabel', 200*[0 maxfx_div2 maxfx]);
   tickpref;
   set(gca,'fontsize', 8);
   if ( fignum == 1 )
      title('MID_2 Nonlinearity', 'fontsize', 8);
   end;


   % Plot the MID1 and MID2 nonlinearity
   %------------------------------------
   subplot(2,3,6);
   %imagesc(x12, y12, fx_v1v2);
   %get(hi)
   %set(hi, 'zscale', 'log')
	fx_v1v2 = imfilter(fx_v1v2,gaussian);
   h = imagesc(x12, y12, log10(fx_v1v2+0.001));
%    get(h,'xdata')
%    pause
   %cm = colormap(gray);
   %colormap(gca, flipud(cm));
   set(gca,'clim', [-3 0]);
   tickpref;
   if ( fignum == 5 )
      xlabel('MID_1 Similarity','fontsize',8);
      ylabel('MID_2 Similarity', 'fontsize',8);
   end
   axis('xy');
   %axis('square');
%    cmap = color_brewer_colormap('ylorbr');
%    colormap(cmap);
%    hc = colorbar;
%    set(hc,'ytick', [-3 -2 -1 0], 'yticklabel', 200*[0.001 0.01 0.1 1]);

   set(gca,'fontsize', 8);
   if ( fignum == 1 )
      title('2D Nonlinearity', 'fontsize', 8);
   end


%    if ( mod(fignum,5) )
%       fignum = fignum + 1;
%       if ( saveit )
%          if ( i == length(mid) )
% 				exportfig(gcf,sprintf('sta_mid1_mid2_fx_%.0f.eps',i), ...
% 					'color', 'rgb', 'height', 5.5, 'width', 6.0, 'fontmode', 'fixed', 'fontsize', 6);
% 				pause(1);
% 				close;
%          end
%       end
%    else
%       nFigures = nFigures + 1;
%       print_mfilename(mfilename);
%       set(gcf,'position',[50 100 700 800]);
%       if ( saveit )
%          exportfig(gcf,sprintf('sta_mid1_mid2_fx_%.0f.eps',i), ...
% 				'color', 'rgb', 'height', 5.5, 'width', 6.0, 'fontmode', 'fixed', 'fontsize', 6);
%          pause(1);
%          close;
% 		else
% 			pause;
% 			close;
%       end
% 
%       fignum = 1;
%       if ( i ~= numplots ), eval(['f' num2str(i) '=figure;']); end;
%    end

   pause;

end % (for i)

return;


